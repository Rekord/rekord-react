{"version":3,"sources":["rekord-react.min.js"],"names":["root","factory","define","amd","Rekord","react","module","exports","global","require","React","this","undefined","Sync","component","target","property","set","notify","on","isRekord","prototype","Database","off","$change","unmount","componentWillUnmount","apply","arguments","state","setState","forceUpdate"],"mappings":"CAEC,SAAUA,EAAMC,GAEO,kBAAXC,SAAyBA,OAAOC,IAGzCD,QAAQ,SAAU,SAAU,SAASE,EAAQC,GAC3C,MAAOJ,GAAQD,EAAMI,EAAQC,KAGN,gBAAXC,SAAuBA,OAAOC,QAK5CD,OAAOC,QAAUN,EAAQO,OAAQC,QAAQ,UAAWA,QAAQ,UAK5DT,EAAKI,OAASH,EAAQD,EAAMA,EAAKI,OAAQJ,EAAKU,QAEhDC,KAAM,SAASH,EAAQJ,EAAQM,EAAOE,GAKxC,QAASC,GAAMC,EAAWC,EAAQC,EAAUC,GAE1C,MAAON,gBAAgBE,IAKvBF,KAAKG,UAAYA,EACjBH,KAAKI,OAASA,EACdJ,KAAKK,SAAWA,EAEXC,GAEHN,KAAKO,aAGPP,MAAKQ,MAZI,GAAIN,GAAMC,EAAWC,GAN9B,GAAIK,GAAWhB,EAAOgB,QAiEtB,OA5CFP,GAAKQ,WAEHF,GAAI,WAEF,GAAIJ,GAASJ,KAAKI,MAEbK,GAAUL,KAEbA,EAASJ,KAAKI,OAASA,EAAOO,SAGhC,IAAIC,GAAMZ,KAAKY,IAAMR,EAAQA,EAAOS,QAAU,UAAY,UAAYb,KAAKO,OAAQP,MAE/Ec,EAAUd,KAAKG,UAAUY,oBAE7Bf,MAAKG,UAAUY,qBAAuB,WAE/BD,GAEHA,EAAQE,MAAOhB,KAAMiB,WAGvBL,MAGJL,OAAQ,WAEN,GAAKP,KAAKK,SACV,CACE,GAAIa,KACJA,GAAOlB,KAAKK,UAAaL,KAAKI,OAE9BJ,KAAKG,UAAUgB,SAAUD,OAIzBlB,MAAKG,UAAUiB,gBAMnB3B,EAAOS,KAAOA,EAEPT","file":"rekord-react.min.js","sourcesContent":["/* rekord-react 1.4.3 - A rekord binding to React - adding Rekord.Sync by Philip Diffenderfer */\n// UMD (Universal Module Definition)\n(function (root, factory)\n{\n  if (typeof define === 'function' && define.amd) // jshint ignore:line\n  {\n    // AMD. Register as an anonymous module.\n    define(['rekord', 'react'], function(Rekord, react) { // jshint ignore:line\n      return factory(root, Rekord, react);\n    });\n  }\n  else if (typeof module === 'object' && module.exports)  // jshint ignore:line\n  {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory(global, require('rekord'), require('react'));  // jshint ignore:line\n  }\n  else\n  {\n    // Browser globals (root is window)\n    root.Rekord = factory(root, root.Rekord, root.React);\n  }\n}(this, function(global, Rekord, React, undefined)\n{\n\n  var isRekord = Rekord.isRekord;\n\nfunction Sync( component, target, property, set )\n{\n  if ( !(this instanceof Sync) )\n  {\n    return new Sync( component, target );\n  }\n\n  this.component = component;\n  this.target = target;\n  this.property = property;\n\n  if ( set )\n  {\n    this.notify();\n  }\n\n  this.on();\n}\n\nSync.prototype =\n{\n  on: function()\n  {\n    var target = this.target;\n\n    if ( isRekord( target ) )\n    {\n      target = this.target = target.Database;\n    }\n\n    var off = this.off = target[ target.$change ? '$change' : 'change' ]( this.notify, this );\n\n    var unmount = this.component.componentWillUnmount;\n\n    this.component.componentWillUnmount = function()\n    {\n      if ( unmount )\n      {\n        unmount.apply( this, arguments );\n      }\n\n      off();\n    };\n  },\n  notify: function()\n  {\n    if ( this.property )\n    {\n      var state = {};\n      state[ this.property ] = this.target;\n\n      this.component.setState( state );\n    }\n    else\n    {\n      this.component.forceUpdate();\n    }\n  }\n};\n\n\n  Rekord.Sync = Sync;\n\n  return Rekord;\n\n}));\n"],"sourceRoot":"/source/"}